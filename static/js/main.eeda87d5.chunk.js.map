{"version":3,"sources":["components/cybersight-logo.png","App.js","reportWebVitals.js","index.js"],"names":["App","ColoredLine","color","style","backgroundColor","height","className","Container","Header","as","textAlign","Image","src","logo","Content","Subheader","Segment","padded","raised","size","dividing","Icon","name","basic","pubs_data","map","title","href","url","publication_date","authors","abstract","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+1cAAe,G,kBAAA,IAA0B,6C,oDCsF1BA,MAzEf,WAEE,IAAMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,oBACIC,MAAO,CACHD,MAAOA,EACPE,gBAAiBF,EACjBG,OAAQ,MAKlB,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAA1B,UACE,cAACC,EAAA,EAAD,CAAOC,IAAKC,IACZ,cAACL,EAAA,EAAOM,QAAR,0CACA,cAACN,EAAA,EAAOO,UAAR,0CAKF,eAACC,EAAA,EAAD,CAASC,OAAO,OAAOC,QAAM,EAACC,KAAK,QAAnC,UACE,eAACX,EAAA,EAAD,CAAQC,GAAG,KAAKW,UAAQ,EAAxB,UACE,cAACC,EAAA,EAAD,CAAMC,KAAK,oBACX,eAACd,EAAA,EAAOM,QAAR,mBAEE,cAACN,EAAA,EAAOO,UAAR,2DAKJ,eAACC,EAAA,EAAD,CAASO,OAAK,EAACJ,KAAK,SAApB,sRAKE,uBACF,cAAClB,EAAD,CAAaC,MAAM,UACnB,cAACc,EAAA,EAAD,CAASO,OAAK,EAACJ,KAAK,QAApB,SACGK,EAAUC,KAAI,SAAAD,GAAS,OACtB,6BACE,gCACE,eAAChB,EAAA,EAAD,CAAQC,GAAG,KAAX,UACGe,EAAUE,MACX,cAAClB,EAAA,EAAOO,UAAR,UACE,mBAAGY,KAAMH,EAAUI,IAAnB,yCAKJ,eAACZ,EAAA,EAAD,CAASO,OAAK,EAACJ,KAAK,QAApB,wBACcK,EAAUK,oBAExB,eAACb,EAAA,EAAD,CAASO,OAAK,EAACJ,KAAK,SAApB,sBACYK,EAAUM,WAEtB,cAACd,EAAA,EAAD,CAASO,OAAK,EAACJ,KAAK,SAApB,SACGK,EAAUO,eAjBRP,EAAUQ,qBC3ClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eeda87d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cybersight-logo.46d41ccb.png\";","import './App.css';\nimport \"semantic-ui-css/semantic.min.css\";\nimport logo from \"./components/cybersight-logo.png\"\nimport {\n  Container,\n  Header,\n  Image,\n  Icon,\n  Segment,\n  } from \"semantic-ui-react\";\nimport pubs_data from \"./data/publications.json\";\n\n\nfunction App() {\n\n  const ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 3\n        }}\n    />\n);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header as=\"h1\" textAlign=\"center\">\n          <Image src={logo} />\n          <Header.Content>Awesome AI in Ophthalmology</Header.Content>\n          <Header.Subheader>\n            Powered by Cybersight-AI\n          </Header.Subheader>\n        </Header>\n\n        <Segment padded=\"very\" raised size=\"large\">\n          <Header as=\"h3\" dividing>\n            <Icon name=\"question circle\" />\n            <Header.Content>\n              About\n              <Header.Subheader>\n                What is AI in Ophthalmology all about?\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n          <Segment basic size=\"medium\">\n            Artificial Intelligence in Ophthalmology is an ever-growing field.\n            The aim of this site is to provide a source of truth for all resources\n            involving AI in Ophthalmology, to better understand the field, and build\n            a community in which we can better help the world see.\n            <br />\n          <ColoredLine color=\"black\" />\n          <Segment basic size=\"large\">\n            {pubs_data.map(pubs_data => (\n              <li key={pubs_data.id}>\n                <div>\n                  <Header as=\"h3\">\n                    {pubs_data.title}\n                    <Header.Subheader>\n                      <a href={pubs_data.url}>\n                        Visit Publication Here\n                      </a>\n                    </Header.Subheader>\n                  </Header>\n                  <Segment basic size=\"small\">\n                    Published: {pubs_data.publication_date}\n                  </Segment>\n                  <Segment basic size=\"medium\">\n                    Authors: {pubs_data.authors}\n                  </Segment>\n                  <Segment basic size=\"medium\">\n                    {pubs_data.abstract}\n                  </Segment>\n                </div>\n              </li>\n                ))}\n          </Segment>\n          </Segment>\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}